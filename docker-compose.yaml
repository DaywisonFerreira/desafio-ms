version: '3.8'
services:
  publisher:
    build:
      context: ./ms1
    environment:
      NODE_ENV: local
      APPLICATION_PORT: 3000
      APPLICATION_NAME: publisher
      APPLICATION_VERSION: 1.0.0
      SWAGGER_TITLE: "Service 1"
      SWAGGER_DESCRIPTION: "Service - 1"
      SWAGGER_DOCS: swagger
      SWAGGER_SERVER: "http://localhost:3000"
      KAFKA_CLIENT_ID: "client-ms1"
      KAFKA_URIS: "kafka:9092"
      KAFKA_GROUP_ID: "ms1-consumer"
      KAFKA_TOPIC_CREATE_NEW_USER: "kafka.topic.create.new.users"
    ports:
      - '3000:3000'
    depends_on:
      - kafka
    networks:
      - app-trade-network

  subscriber:
    build:
      context: ./ms2
    environment:
      NODE_ENV: local
      APPLICATION_PORT: 4000
      APPLICATION_NAME: subscriber
      APPLICATION_VERSION: 1.0.0
      DATABASE_URI: "mongodb://mongodb:27017/appTradeDB"
      KAFKA_CLIENT_ID: "client-ms2"
      KAFKA_URIS: "kafka:9092"
      KAFKA_GROUP_ID: "ms2-consumer"
      KAFKA_TOPIC_CREATE_NEW_USER: "kafka.topic.create.new.users"
    ports:
      - '4000:4000'
    depends_on:
      - zookeeper
      - kafka
      - mongodb
    networks:
      - app-trade-network
    links:
      - mongodb

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENERS: 'INTERNAL://:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://:9092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT'
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_CREATE_TOPICS: "kafka.topic.create.new.users:1:1"
      KAFKA_ADVERTISED_HOST_NAME: host.docker.internal
    networks:
      - app-trade-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - '2181:2181'
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - app-trade-network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    ports:
      - '9000:9000'
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
    networks:
      - app-trade-network

  mongodb:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - .docker/db_data:/data/db
    networks:
      - app-trade-network

networks:
  app-trade-network:
    driver: bridge
    name: app-trade-network
